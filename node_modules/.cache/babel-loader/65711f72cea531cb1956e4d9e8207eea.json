{"ast":null,"code":"/* Clearing variables */\nimport { getPositionIn, getPositionOut } from './offsetCalculator';\nimport getInlineOption from './getInlineOption';\n\nconst prepare = function ($elements, options) {\n  $elements.forEach((el, i) => {\n    const mirror = getInlineOption(el.node, 'mirror', options.mirror);\n    const once = getInlineOption(el.node, 'once', options.once);\n    const id = getInlineOption(el.node, 'id');\n    const customClassNames = options.useClassNames && el.node.getAttribute('data-aos');\n    const animatedClassNames = [options.animatedClassName].concat(customClassNames ? customClassNames.split(' ') : []).filter(className => typeof className === 'string');\n\n    if (options.initClassName) {\n      el.node.classList.add(options.initClassName);\n    }\n\n    el.position = {\n      in: getPositionIn(el.node, options.offset, options.anchorPlacement),\n      out: mirror && getPositionOut(el.node, options.offset)\n    };\n    el.options = {\n      once,\n      mirror,\n      animatedClassNames,\n      id\n    };\n  });\n  return $elements;\n};\n\nexport default prepare;","map":{"version":3,"sources":["D:/myportfolio/node_modules/aos/src/js/helpers/prepare.js"],"names":["getPositionIn","getPositionOut","getInlineOption","prepare","$elements","options","forEach","el","i","mirror","node","once","id","customClassNames","useClassNames","getAttribute","animatedClassNames","animatedClassName","concat","split","filter","className","initClassName","classList","add","position","in","offset","anchorPlacement","out"],"mappings":"AAAA;AAEA,SAASA,aAAT,EAAwBC,cAAxB,QAA8C,oBAA9C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,OAAO,GAAG,UAASC,SAAT,EAAoBC,OAApB,EAA6B;AAC3CD,EAAAA,SAAS,CAACE,OAAV,CAAkB,CAACC,EAAD,EAAKC,CAAL,KAAW;AAC3B,UAAMC,MAAM,GAAGP,eAAe,CAACK,EAAE,CAACG,IAAJ,EAAU,QAAV,EAAoBL,OAAO,CAACI,MAA5B,CAA9B;AACA,UAAME,IAAI,GAAGT,eAAe,CAACK,EAAE,CAACG,IAAJ,EAAU,MAAV,EAAkBL,OAAO,CAACM,IAA1B,CAA5B;AACA,UAAMC,EAAE,GAAGV,eAAe,CAACK,EAAE,CAACG,IAAJ,EAAU,IAAV,CAA1B;AACA,UAAMG,gBAAgB,GACpBR,OAAO,CAACS,aAAR,IAAyBP,EAAE,CAACG,IAAH,CAAQK,YAAR,CAAqB,UAArB,CAD3B;AAGA,UAAMC,kBAAkB,GAAG,CAACX,OAAO,CAACY,iBAAT,EACxBC,MADwB,CACjBL,gBAAgB,GAAGA,gBAAgB,CAACM,KAAjB,CAAuB,GAAvB,CAAH,GAAiC,EADhC,EAExBC,MAFwB,CAEjBC,SAAS,IAAI,OAAOA,SAAP,KAAqB,QAFjB,CAA3B;;AAIA,QAAIhB,OAAO,CAACiB,aAAZ,EAA2B;AACzBf,MAAAA,EAAE,CAACG,IAAH,CAAQa,SAAR,CAAkBC,GAAlB,CAAsBnB,OAAO,CAACiB,aAA9B;AACD;;AAEDf,IAAAA,EAAE,CAACkB,QAAH,GAAc;AACZC,MAAAA,EAAE,EAAE1B,aAAa,CAACO,EAAE,CAACG,IAAJ,EAAUL,OAAO,CAACsB,MAAlB,EAA0BtB,OAAO,CAACuB,eAAlC,CADL;AAEZC,MAAAA,GAAG,EAAEpB,MAAM,IAAIR,cAAc,CAACM,EAAE,CAACG,IAAJ,EAAUL,OAAO,CAACsB,MAAlB;AAFjB,KAAd;AAKApB,IAAAA,EAAE,CAACF,OAAH,GAAa;AACXM,MAAAA,IADW;AAEXF,MAAAA,MAFW;AAGXO,MAAAA,kBAHW;AAIXJ,MAAAA;AAJW,KAAb;AAMD,GA1BD;AA4BA,SAAOR,SAAP;AACD,CA9BD;;AAgCA,eAAeD,OAAf","sourcesContent":["/* Clearing variables */\n\nimport { getPositionIn, getPositionOut } from './offsetCalculator';\nimport getInlineOption from './getInlineOption';\n\nconst prepare = function($elements, options) {\n  $elements.forEach((el, i) => {\n    const mirror = getInlineOption(el.node, 'mirror', options.mirror);\n    const once = getInlineOption(el.node, 'once', options.once);\n    const id = getInlineOption(el.node, 'id');\n    const customClassNames =\n      options.useClassNames && el.node.getAttribute('data-aos');\n\n    const animatedClassNames = [options.animatedClassName]\n      .concat(customClassNames ? customClassNames.split(' ') : [])\n      .filter(className => typeof className === 'string');\n\n    if (options.initClassName) {\n      el.node.classList.add(options.initClassName);\n    }\n\n    el.position = {\n      in: getPositionIn(el.node, options.offset, options.anchorPlacement),\n      out: mirror && getPositionOut(el.node, options.offset)\n    };\n\n    el.options = {\n      once,\n      mirror,\n      animatedClassNames,\n      id\n    };\n  });\n\n  return $elements;\n};\n\nexport default prepare;\n"]},"metadata":{},"sourceType":"module"}