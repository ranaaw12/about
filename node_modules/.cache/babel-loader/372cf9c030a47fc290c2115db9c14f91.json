{"ast":null,"code":"/**\n * *******************************************************\n * AOS (Animate on scroll) - wowjs alternative\n * made to animate elements on scroll in both directions\n * *******************************************************\n */\nimport styles from './../sass/aos.scss'; // Modules & helpers\n\nimport throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\nimport observer from './libs/observer';\nimport detect from './helpers/detector';\nimport handleScroll from './helpers/handleScroll';\nimport prepare from './helpers/prepare';\nimport elements from './helpers/elements';\n/**\n * Private variables\n */\n\nlet $aosElements = [];\nlet initialized = false;\n/**\n * Default options\n */\n\nlet options = {\n  offset: 120,\n  delay: 0,\n  easing: 'ease',\n  duration: 400,\n  disable: false,\n  once: false,\n  mirror: false,\n  anchorPlacement: 'top-bottom',\n  startEvent: 'DOMContentLoaded',\n  animatedClassName: 'aos-animate',\n  initClassName: 'aos-init',\n  useClassNames: false,\n  disableMutationObserver: false,\n  throttleDelay: 99,\n  debounceDelay: 50\n}; // Detect not supported browsers (<=IE9)\n// http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\nconst isBrowserNotSupported = () => document.all && !window.atob;\n\nconst initializeScroll = function initializeScroll() {\n  // Extend elements objects in $aosElements with their positions\n  $aosElements = prepare($aosElements, options); // Perform scroll event, to refresh view and show/hide elements\n\n  handleScroll($aosElements);\n  /**\n   * Handle scroll event to animate elements on scroll\n   */\n\n  window.addEventListener('scroll', throttle(() => {\n    handleScroll($aosElements, options.once);\n  }, options.throttleDelay));\n  return $aosElements;\n};\n/**\n * Refresh AOS\n */\n\n\nconst refresh = function refresh(initialize = false) {\n  // Allow refresh only when it was first initialized on startEvent\n  if (initialize) initialized = true;\n  if (initialized) initializeScroll();\n};\n/**\n * Hard refresh\n * create array with new elements and trigger refresh\n */\n\n\nconst refreshHard = function refreshHard() {\n  $aosElements = elements();\n\n  if (isDisabled(options.disable) || isBrowserNotSupported()) {\n    return disable();\n  }\n\n  refresh();\n};\n/**\n * Disable AOS\n * Remove all attributes to reset applied styles\n */\n\n\nconst disable = function () {\n  $aosElements.forEach(function (el, i) {\n    el.node.removeAttribute('data-aos');\n    el.node.removeAttribute('data-aos-easing');\n    el.node.removeAttribute('data-aos-duration');\n    el.node.removeAttribute('data-aos-delay');\n\n    if (options.initClassName) {\n      el.node.classList.remove(options.initClassName);\n    }\n\n    if (options.animatedClassName) {\n      el.node.classList.remove(options.animatedClassName);\n    }\n  });\n};\n/**\n * Check if AOS should be disabled based on provided setting\n */\n\n\nconst isDisabled = function (optionDisable) {\n  return optionDisable === true || optionDisable === 'mobile' && detect.mobile() || optionDisable === 'phone' && detect.phone() || optionDisable === 'tablet' && detect.tablet() || typeof optionDisable === 'function' && optionDisable() === true;\n};\n/**\n * Initializing AOS\n * - Create options merging defaults with user defined options\n * - Set attributes on <body> as global setting - css relies on it\n * - Attach preparing elements to options.startEvent,\n *   window resize and orientation change\n * - Attach function that handle scroll and everything connected to it\n *   to window scroll event and fire once document is ready to set initial state\n */\n\n\nconst init = function init(settings) {\n  options = Object.assign(options, settings); // Create initial array with elements -> to be fullfilled later with prepare()\n\n  $aosElements = elements();\n  /**\n   * Disable mutation observing if not supported\n   */\n\n  if (!options.disableMutationObserver && !observer.isSupported()) {\n    console.info(`\n      aos: MutationObserver is not supported on this browser,\n      code mutations observing has been disabled.\n      You may have to call \"refreshHard()\" by yourself.\n    `);\n    options.disableMutationObserver = true;\n  }\n  /**\n   * Observe [aos] elements\n   * If something is loaded by AJAX\n   * it'll refresh plugin automatically\n   */\n\n\n  if (!options.disableMutationObserver) {\n    observer.ready('[data-aos]', refreshHard);\n  }\n  /**\n   * Don't init plugin if option `disable` is set\n   * or when browser is not supported\n   */\n\n\n  if (isDisabled(options.disable) || isBrowserNotSupported()) {\n    return disable();\n  }\n  /**\n   * Set global settings on body, based on options\n   * so CSS can use it\n   */\n\n\n  document.querySelector('body').setAttribute('data-aos-easing', options.easing);\n  document.querySelector('body').setAttribute('data-aos-duration', options.duration);\n  document.querySelector('body').setAttribute('data-aos-delay', options.delay);\n  /**\n   * Handle initializing\n   */\n\n  if (['DOMContentLoaded', 'load'].indexOf(options.startEvent) === -1) {\n    // Listen to options.startEvent and initialize AOS\n    document.addEventListener(options.startEvent, function () {\n      refresh(true);\n    });\n  } else {\n    window.addEventListener('load', function () {\n      refresh(true);\n    });\n  }\n\n  if (options.startEvent === 'DOMContentLoaded' && ['complete', 'interactive'].indexOf(document.readyState) > -1) {\n    // Initialize AOS if default startEvent was already fired\n    refresh(true);\n  }\n  /**\n   * Refresh plugin on window resize or orientation change\n   */\n\n\n  window.addEventListener('resize', debounce(refresh, options.debounceDelay, true));\n  window.addEventListener('orientationchange', debounce(refresh, options.debounceDelay, true));\n  return $aosElements;\n};\n/**\n * Export Public API\n */\n\n\nexport default {\n  init,\n  refresh,\n  refreshHard\n};","map":{"version":3,"sources":["D:/myportfolio/node_modules/aos/src/js/aos.js"],"names":["styles","throttle","debounce","observer","detect","handleScroll","prepare","elements","$aosElements","initialized","options","offset","delay","easing","duration","disable","once","mirror","anchorPlacement","startEvent","animatedClassName","initClassName","useClassNames","disableMutationObserver","throttleDelay","debounceDelay","isBrowserNotSupported","document","all","window","atob","initializeScroll","addEventListener","refresh","initialize","refreshHard","isDisabled","forEach","el","i","node","removeAttribute","classList","remove","optionDisable","mobile","phone","tablet","init","settings","Object","assign","isSupported","console","info","ready","querySelector","setAttribute","indexOf","readyState"],"mappings":"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","sourcesContent":["/**\n * *******************************************************\n * AOS (Animate on scroll) - wowjs alternative\n * made to animate elements on scroll in both directions\n * *******************************************************\n */\nimport styles from './../sass/aos.scss';\n\n// Modules & helpers\nimport throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\n\nimport observer from './libs/observer';\n\nimport detect from './helpers/detector';\nimport handleScroll from './helpers/handleScroll';\nimport prepare from './helpers/prepare';\nimport elements from './helpers/elements';\n\n/**\n * Private variables\n */\nlet $aosElements = [];\nlet initialized = false;\n\n/**\n * Default options\n */\nlet options = {\n  offset: 120,\n  delay: 0,\n  easing: 'ease',\n  duration: 400,\n  disable: false,\n  once: false,\n  mirror: false,\n  anchorPlacement: 'top-bottom',\n  startEvent: 'DOMContentLoaded',\n  animatedClassName: 'aos-animate',\n  initClassName: 'aos-init',\n  useClassNames: false,\n  disableMutationObserver: false,\n  throttleDelay: 99,\n  debounceDelay: 50\n};\n\n// Detect not supported browsers (<=IE9)\n// http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\nconst isBrowserNotSupported = () => document.all && !window.atob;\n\nconst initializeScroll = function initializeScroll() {\n  // Extend elements objects in $aosElements with their positions\n  $aosElements = prepare($aosElements, options);\n  // Perform scroll event, to refresh view and show/hide elements\n  handleScroll($aosElements);\n\n  /**\n   * Handle scroll event to animate elements on scroll\n   */\n  window.addEventListener(\n    'scroll',\n    throttle(() => {\n      handleScroll($aosElements, options.once);\n    }, options.throttleDelay)\n  );\n\n  return $aosElements;\n};\n\n/**\n * Refresh AOS\n */\nconst refresh = function refresh(initialize = false) {\n  // Allow refresh only when it was first initialized on startEvent\n  if (initialize) initialized = true;\n  if (initialized) initializeScroll();\n};\n\n/**\n * Hard refresh\n * create array with new elements and trigger refresh\n */\nconst refreshHard = function refreshHard() {\n  $aosElements = elements();\n\n  if (isDisabled(options.disable) || isBrowserNotSupported()) {\n    return disable();\n  }\n\n  refresh();\n};\n\n/**\n * Disable AOS\n * Remove all attributes to reset applied styles\n */\nconst disable = function() {\n  $aosElements.forEach(function(el, i) {\n    el.node.removeAttribute('data-aos');\n    el.node.removeAttribute('data-aos-easing');\n    el.node.removeAttribute('data-aos-duration');\n    el.node.removeAttribute('data-aos-delay');\n\n    if (options.initClassName) {\n      el.node.classList.remove(options.initClassName);\n    }\n\n    if (options.animatedClassName) {\n      el.node.classList.remove(options.animatedClassName);\n    }\n  });\n};\n\n/**\n * Check if AOS should be disabled based on provided setting\n */\nconst isDisabled = function(optionDisable) {\n  return (\n    optionDisable === true ||\n    (optionDisable === 'mobile' && detect.mobile()) ||\n    (optionDisable === 'phone' && detect.phone()) ||\n    (optionDisable === 'tablet' && detect.tablet()) ||\n    (typeof optionDisable === 'function' && optionDisable() === true)\n  );\n};\n\n/**\n * Initializing AOS\n * - Create options merging defaults with user defined options\n * - Set attributes on <body> as global setting - css relies on it\n * - Attach preparing elements to options.startEvent,\n *   window resize and orientation change\n * - Attach function that handle scroll and everything connected to it\n *   to window scroll event and fire once document is ready to set initial state\n */\nconst init = function init(settings) {\n  options = Object.assign(options, settings);\n\n  // Create initial array with elements -> to be fullfilled later with prepare()\n  $aosElements = elements();\n\n  /**\n   * Disable mutation observing if not supported\n   */\n  if (!options.disableMutationObserver && !observer.isSupported()) {\n    console.info(`\n      aos: MutationObserver is not supported on this browser,\n      code mutations observing has been disabled.\n      You may have to call \"refreshHard()\" by yourself.\n    `);\n    options.disableMutationObserver = true;\n  }\n\n  /**\n   * Observe [aos] elements\n   * If something is loaded by AJAX\n   * it'll refresh plugin automatically\n   */\n  if (!options.disableMutationObserver) {\n    observer.ready('[data-aos]', refreshHard);\n  }\n\n  /**\n   * Don't init plugin if option `disable` is set\n   * or when browser is not supported\n   */\n  if (isDisabled(options.disable) || isBrowserNotSupported()) {\n    return disable();\n  }\n\n  /**\n   * Set global settings on body, based on options\n   * so CSS can use it\n   */\n  document\n    .querySelector('body')\n    .setAttribute('data-aos-easing', options.easing);\n\n  document\n    .querySelector('body')\n    .setAttribute('data-aos-duration', options.duration);\n\n  document.querySelector('body').setAttribute('data-aos-delay', options.delay);\n\n  /**\n   * Handle initializing\n   */\n  if (['DOMContentLoaded', 'load'].indexOf(options.startEvent) === -1) {\n    // Listen to options.startEvent and initialize AOS\n    document.addEventListener(options.startEvent, function() {\n      refresh(true);\n    });\n  } else {\n    window.addEventListener('load', function() {\n      refresh(true);\n    });\n  }\n\n  if (\n    options.startEvent === 'DOMContentLoaded' &&\n    ['complete', 'interactive'].indexOf(document.readyState) > -1\n  ) {\n    // Initialize AOS if default startEvent was already fired\n    refresh(true);\n  }\n\n  /**\n   * Refresh plugin on window resize or orientation change\n   */\n  window.addEventListener(\n    'resize',\n    debounce(refresh, options.debounceDelay, true)\n  );\n\n  window.addEventListener(\n    'orientationchange',\n    debounce(refresh, options.debounceDelay, true)\n  );\n\n  return $aosElements;\n};\n\n/**\n * Export Public API\n */\n\nexport default {\n  init,\n  refresh,\n  refreshHard\n};\n"]},"metadata":{},"sourceType":"module"}